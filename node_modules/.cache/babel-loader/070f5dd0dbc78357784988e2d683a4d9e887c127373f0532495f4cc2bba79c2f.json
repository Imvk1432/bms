{"ast":null,"code":"var _jsxFileName = \"D:\\\\D\\\\EDGE DLOAD\\\\Placement PREP\\\\React\\\\bookpage-class\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useEffect, useState } from 'react';\nimport Book from './components/Book';\nimport AddBook from './components/AddBook';\nimport useFetch from './useFetch';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  let [enteredId, setEnteredId] = useState(\"\");\n  let [enteredTitle, setEnteredTitle] = useState(\"\");\n  let [enteredAuthor, setEnteredAuthor] = useState(\"\");\n  let [enteredPrice, setEnteredPrice] = useState(\"\");\n  let [books, setBooks] = useState(null);\n  let {\n    error\n  } = useFetch('http://localhost:8000/books', setBooks);\n\n  /*\r\n  useEffect(() => {\r\n      fetch('http://localhost:8000/books')\r\n          .then(response => {\r\n              if (!response.ok) {\r\n                  throw new Error('Failed to fetch books');\r\n              }\r\n              return response.json();\r\n          })\r\n          .then(data => {\r\n              setBooks(data);\r\n          })\r\n          .catch(error => {\r\n              // Handle error\r\n              console.error('Error fetching books:', error);\r\n              // Optionally, you can set a default state or show an error message\r\n          });\r\n  }, []);\r\n  */\n\n  /*\r\n      useEffect(()=>{\r\n          console.log(books);\r\n      }, [books]);\r\n  \r\n  */\n\n  useEffect(() => {\n    fetch('http://localhost:8000/books').then(response => {\n      return response.json();\n    }).then(data => {\n      setBooks(data);\n      console.log(data);\n    });\n  }, []);\n\n  //                     4\n  function handleRemove(id) {\n    /*\r\n    let newBooks = books.filter(\r\n        (element)=>{\r\n            return element.id !=id;\r\n        }\r\n    )\r\n    setBooks(newBooks);\r\n    */\n\n    fetch(`http://localhost:8000/books/${id}`, {\n      method: 'DELETE'\n    }).then(response => {\n      if (!response.ok) {\n        throw new Error('Failed to remove book');\n      }\n      // Update the state of books after successful removal\n      let newBooks = books.filter(element => {\n        return element.id !== id;\n      });\n      setBooks(newBooks);\n    }).catch(error => {\n      // Handle error\n      console.error('Error removing book:', error);\n    });\n  }\n  function handleSubmit(event) {\n    event.preventDefault();\n    let book = {\n      id: enteredId,\n      title: enteredTitle,\n      author: enteredAuthor,\n      price: enteredPrice\n    };\n    fetch('http://localhost:8000/books', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(book)\n    }).then(() => {\n      let newBooks = [...books];\n      newBooks.push(book);\n      setBooks(newBooks);\n    });\n\n    /*\r\n    .then(response => {\r\n        if (!response.ok) {\r\n            throw new Error('Failed to add book');\r\n        }\r\n        return response.json();\r\n    })\r\n    .then(book => {\r\n        console.log('Book added successfully:', book);\r\n        let newBooks = [...books];\r\n        newBooks.push(book);\r\n        setBooks(newBooks);\r\n      })\r\n    .catch(error => {\r\n        // Handle error\r\n        console.error('Error adding book:', error);\r\n    });\r\n    */\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"main-container\",\n    children: [/*#__PURE__*/_jsxDEV(AddBook, {\n      handleSubmit: handleSubmit,\n      setEnteredId: setEnteredId,\n      setEnteredTitle: setEnteredTitle,\n      setEnteredAuthor: setEnteredAuthor,\n      setEnteredPrice: setEnteredPrice\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }, this), !error ? books &&\n    // to make sure book is not null\n    books.map(element => {\n      return /*#__PURE__*/_jsxDEV(Book, {\n        id: element.id,\n        title: element.title,\n        author: element.author,\n        price: element.price,\n        handleRemove: handleRemove,\n        books: books,\n        setBooks: setBooks\n      }, element.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 32\n      }, this);\n    }) : error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 140,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"Mcx0tG8bcXBbSQe5xWPSU5CDiNw=\", false, function () {\n  return [useFetch];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","Book","AddBook","useFetch","jsxDEV","_jsxDEV","App","_s","enteredId","setEnteredId","enteredTitle","setEnteredTitle","enteredAuthor","setEnteredAuthor","enteredPrice","setEnteredPrice","books","setBooks","error","fetch","then","response","json","data","console","log","handleRemove","id","method","ok","Error","newBooks","filter","element","catch","handleSubmit","event","preventDefault","book","title","author","price","headers","body","JSON","stringify","push","children","fileName","_jsxFileName","lineNumber","columnNumber","map","_c","$RefreshReg$"],"sources":["D:/D/EDGE DLOAD/Placement PREP/React/bookpage-class/src/App.js"],"sourcesContent":["import React from 'react';\r\n\r\nimport {useEffect, useState} from 'react';\r\nimport Book from './components/Book';\r\nimport AddBook from './components/AddBook';\r\nimport useFetch from './useFetch';\r\n\r\nfunction App() {\r\n\r\n    let[enteredId, setEnteredId] = useState(\"\");\r\n    let[enteredTitle, setEnteredTitle] = useState(\"\");\r\n    let[enteredAuthor, setEnteredAuthor] = useState(\"\");\r\n    let[enteredPrice, setEnteredPrice] = useState(\"\");\r\n\r\n    let[books, setBooks] = useState(null);\r\n\r\n    let {error} = useFetch('http://localhost:8000/books', setBooks);\r\n\r\n/*\r\nuseEffect(() => {\r\n    fetch('http://localhost:8000/books')\r\n        .then(response => {\r\n            if (!response.ok) {\r\n                throw new Error('Failed to fetch books');\r\n            }\r\n            return response.json();\r\n        })\r\n        .then(data => {\r\n            setBooks(data);\r\n        })\r\n        .catch(error => {\r\n            // Handle error\r\n            console.error('Error fetching books:', error);\r\n            // Optionally, you can set a default state or show an error message\r\n        });\r\n}, []);\r\n*/\r\n\r\n\r\n/*\r\n    useEffect(()=>{\r\n        console.log(books);\r\n    }, [books]);\r\n\r\n*/\r\n\r\n\r\n\r\n    useEffect(()=>{\r\n        fetch('http://localhost:8000/books')\r\n        .then((response)=>{\r\n            return response.json();\r\n        })\r\n        .then((data)=>{\r\n            setBooks(data);\r\n            console.log(data);\r\n        })\r\n    \r\n    }, [])\r\n\r\n\r\n    //                     4\r\n    function handleRemove(id){\r\n        /*\r\n        let newBooks = books.filter(\r\n            (element)=>{\r\n                return element.id !=id;\r\n            }\r\n        )\r\n        setBooks(newBooks);\r\n        */\r\n\r\n        fetch(`http://localhost:8000/books/${id}`, {\r\n            method: 'DELETE'\r\n        })\r\n        .then(response => {\r\n            if (!response.ok) {\r\n                throw new Error('Failed to remove book');\r\n            }\r\n            // Update the state of books after successful removal\r\n            let newBooks = books.filter(\r\n                (element)=>{\r\n                    return element.id !== id;\r\n                }\r\n            )\r\n            setBooks(newBooks);\r\n        })\r\n        .catch(error => {\r\n            // Handle error\r\n            console.error('Error removing book:', error);\r\n        });\r\n    }   \r\n\r\n    function handleSubmit(event) {\r\n        event.preventDefault();\r\n        let book = {\r\n                      id: enteredId,\r\n                      title: enteredTitle,\r\n                      author: enteredAuthor,\r\n                      price: enteredPrice\r\n                   }\r\n\r\n        fetch('http://localhost:8000/books', {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(book)\r\n        })\r\n        .then(()=>{\r\n            let newBooks = [...books];\r\n            newBooks.push(book);\r\n            setBooks(newBooks); \r\n        })\r\n\r\n        \r\n\r\n    /*\r\n    .then(response => {\r\n        if (!response.ok) {\r\n            throw new Error('Failed to add book');\r\n        }\r\n        return response.json();\r\n    })\r\n    .then(book => {\r\n        console.log('Book added successfully:', book);\r\n        let newBooks = [...books];\r\n        newBooks.push(book);\r\n        setBooks(newBooks);\r\n\r\n    })\r\n    .catch(error => {\r\n        // Handle error\r\n        console.error('Error adding book:', error);\r\n    });\r\n    */\r\n    }\r\n\r\n    return(\r\n        <div id=\"main-container\">\r\n            \r\n            <AddBook  \r\n                handleSubmit={handleSubmit} \r\n                setEnteredId={setEnteredId} \r\n                setEnteredTitle={setEnteredTitle} \r\n                setEnteredAuthor={setEnteredAuthor} \r\n                setEnteredPrice={setEnteredPrice}>\r\n            </AddBook>\r\n            {   \r\n                !error ? books &&                                         // to make sure book is not null\r\n                books.map(\r\n                    (element)=>{\r\n                        return <Book \r\n                                    key={element.id} \r\n                                    id={element.id} \r\n                                    title={element.title} \r\n                                    author={element.author} \r\n                                    price={element.price} \r\n                                    handleRemove={handleRemove}\r\n                                    books = {books}\r\n                                    setBooks = {setBooks}\r\n                                    >    \r\n                                </Book>\r\n                    }\r\n                ) \r\n                :\r\n                error \r\n            }                    \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}