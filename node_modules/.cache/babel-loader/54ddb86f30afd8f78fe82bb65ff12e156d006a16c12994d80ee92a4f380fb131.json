{"ast":null,"code":"var _jsxFileName = \"D:\\\\D\\\\EDGE DLOAD\\\\Placement PREP\\\\React\\\\bookpage-class\\\\src\\\\components\\\\Book.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useState } from 'react';\nimport './Book.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Book(props) {\n  _s();\n  let [isUpdating, setIsUpdating] = useState(false);\n  let [updatedId, setUpdatedId] = useState(props.id);\n  let [updatedTitle, setUpdatedTitle] = useState(props.title);\n  let [updatedAuthor, setUpdatedAuthor] = useState(props.author);\n  let [updatedPrice, setUpdatedPrice] = useState(props.price);\n\n  // isUpdating variable = false\n  // now isUpdating is true\n  function handleUpdate() {\n    let book;\n    if (isUpdating === true) {\n      book = {\n        id: updatedId,\n        title: updatedTitle,\n        author: updatedAuthor,\n        price: updatedPrice\n      };\n      fetch(`http://localhost:8000/books/${props.id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(book)\n      }).then(() => {\n        let newBooks = [...props.books];\n        newBooks.map((element, idx) => {\n          if (element.id == book.id) {\n            newBooks.splice(idx, 1, book);\n          }\n        });\n        props.setBooks(newBooks);\n        setIsUpdating(false);\n      });\n    } else {\n      setIsUpdating(true);\n    }\n  }\n  function handleIdChange(event) {\n    setUpdatedId(event.target.value);\n  }\n  function handleTitleChange(event) {\n    setUpdatedTitle(event.target.value);\n  }\n  function handleAuthorChange(event) {\n    setUpdatedAuthor(event.target.value);\n  }\n  function handlePriceChange(event) {\n    setUpdatedPrice(event.target.value);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"book-container\",\n    children: [isUpdating ? /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"input-data1\",\n      className: \"input-data\",\n      placeholder: \"ID\",\n      required: true,\n      onChange: handleIdChange,\n      value: updatedId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n      id: \"container-data1\",\n      className: \"book-data\",\n      children: props.id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 17\n    }, this), isUpdating ? /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"input-data2\",\n      placeholder: \"Title\",\n      className: \"input-data\",\n      onChange: handleTitleChange,\n      value: updatedTitle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 21\n    }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n      id: \"container-data2\",\n      className: \"book-data\",\n      children: props.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 21\n    }, this), isUpdating ? /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"input-data3\",\n      className: \"input-data\",\n      onChange: handleAuthorChange,\n      value: updatedAuthor\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 21\n    }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n      id: \"container-data3\",\n      className: \"book-data\",\n      children: props.author\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 21\n    }, this), isUpdating ? /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"input-data4\",\n      className: \"input-data\",\n      onChange: handlePriceChange,\n      value: updatedPrice\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 21\n    }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n      id: \"container-data4\",\n      className: \"book-data\",\n      children: props.price\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"remove-btn\",\n      className: \"btn\",\n      onClick: () => {\n        props.handleRemove(props.id);\n      },\n      children: \"Remove\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"update-btn\",\n      className: \"btn\",\n      onClick: handleUpdate,\n      children: [\" \", isUpdating ? \"Save\" : \"Update\", \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 9\n  }, this);\n}\n_s(Book, \"tMycYkA+wwCoKfW17XZWTpBy+zc=\");\n_c = Book;\nexport default Book;\nvar _c;\n$RefreshReg$(_c, \"Book\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Book","props","_s","isUpdating","setIsUpdating","updatedId","setUpdatedId","id","updatedTitle","setUpdatedTitle","title","updatedAuthor","setUpdatedAuthor","author","updatedPrice","setUpdatedPrice","price","handleUpdate","book","fetch","method","headers","body","JSON","stringify","then","newBooks","books","map","element","idx","splice","setBooks","handleIdChange","event","target","value","handleTitleChange","handleAuthorChange","handlePriceChange","children","type","className","placeholder","required","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","handleRemove","_c","$RefreshReg$"],"sources":["D:/D/EDGE DLOAD/Placement PREP/React/bookpage-class/src/components/Book.jsx"],"sourcesContent":["import React from 'react';\r\nimport { useState } from 'react';\r\nimport './Book.css';\r\n\r\nfunction Book(props){\r\n\r\n    let[isUpdating, setIsUpdating] = useState(false);\r\n\r\n    let[updatedId, setUpdatedId] = useState(props.id);\r\n    let[updatedTitle, setUpdatedTitle] = useState(props.title);\r\n    let[updatedAuthor, setUpdatedAuthor] = useState(props.author);\r\n    let[updatedPrice, setUpdatedPrice] = useState(props.price);\r\n\r\n\r\n\r\n    // isUpdating variable = false\r\n    // now isUpdating is true\r\n    function handleUpdate(){\r\n        let book;\r\n\r\n        if(isUpdating === true) {\r\n            book = {\r\n                        id: updatedId,\r\n                        title: updatedTitle,\r\n                        author: updatedAuthor,\r\n                        price: updatedPrice\r\n                    }\r\n\r\n                    fetch(`http://localhost:8000/books/${props.id}`, {\r\n                        method: 'PUT',\r\n                        headers: {\r\n                            'Content-Type': 'application/json'\r\n                        },\r\n                        body: JSON.stringify(book)\r\n                    })\r\n                    .then(()=>{\r\n                        let newBooks = [...props.books];\r\n\r\n                    newBooks.map(\r\n                        (element, idx)=>{\r\n                            if(element.id == book.id) {\r\n                                newBooks.splice(idx, 1, book);\r\n                            }\r\n                        }\r\n                    )\r\n            \r\n                    props.setBooks(newBooks);\r\n                    setIsUpdating(false);\r\n                    })        \r\n        }   \r\n        else{\r\n            setIsUpdating(true);\r\n        }\r\n    }\r\n\r\n    function handleIdChange(event) {\r\n        setUpdatedId(event.target.value);\r\n    }\r\n\r\n    function handleTitleChange(event){\r\n        setUpdatedTitle(event.target.value);\r\n    }\r\n\r\n    function handleAuthorChange(event){\r\n        setUpdatedAuthor(event.target.value);\r\n    }\r\n\r\n\r\n    function handlePriceChange(event){\r\n        setUpdatedPrice(event.target.value);\r\n    }\r\n\r\n    return(\r\n        <div id=\"book-container\">\r\n\r\n            {isUpdating ? \r\n                <input  \r\n                    type=\"text\"\r\n                    id=\"input-data1\"\r\n                    className=\"input-data\"\r\n                    placeholder='ID'\r\n                    required\r\n                    onChange={handleIdChange}\r\n                    value={updatedId}\r\n                    \r\n            />\r\n            :\r\n                <span id=\"container-data1\" className='book-data'>{props.id}</span>\r\n            }\r\n\r\n\r\n            {\r\n                isUpdating?\r\n                    <input\r\n                        type=\"text\"\r\n                        id=\"input-data2\"\r\n                        placeholder='Title'\r\n                        className=\"input-data\"\r\n                        onChange={handleTitleChange}\r\n                        value = {updatedTitle}\r\n\r\n                    />\r\n                :\r\n                    <span id=\"container-data2\" className='book-data'>{props.title}</span> \r\n\r\n            }\r\n\r\n{\r\n                isUpdating?\r\n                    <input\r\n                        type=\"text\"\r\n                        id=\"input-data3\"\r\n                        className=\"input-data\"\r\n                        onChange={handleAuthorChange}\r\n                        value = {updatedAuthor}\r\n                    />\r\n                :\r\n                    <span id=\"container-data3\" className='book-data'>{props.author}</span> \r\n\r\n            }\r\n\r\n\r\n{\r\n                isUpdating?\r\n                    <input\r\n                        type=\"text\"\r\n                        id=\"input-data4\"\r\n                        className=\"input-data\"\r\n                        onChange={handlePriceChange}\r\n                        value={updatedPrice}\r\n                    />\r\n                :\r\n                    <span id=\"container-data4\" className='book-data'>{props.price}</span> \r\n\r\n            }\r\n\r\n          <button id=\"remove-btn\" className='btn' onClick={()=>{props.handleRemove(props.id)}}>Remove</button>\r\n          <button id=\"update-btn\" className='btn' onClick={handleUpdate} > {isUpdating ? \"Save\" : \"Update\"} </button>\r\n        </div>\r\n    );\r\n}\r\nexport default Book;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}