{"ast":null,"code":"// import React from 'react';\n// import { useState } from 'react';\n// import './Book.css';\n\n// function Book(props){\n\n//     let[isUpdating, setIsUpdating] = useState(false);\n\n//     let[updatedId, setUpdatedId] = useState(props.id);\n//     let[updatedTitle, setUpdatedTitle] = useState(props.title);\n//     let[updatedAuthor, setUpdatedAuthor] = useState(props.author);\n//     let[updatedPrice, setUpdatedPrice] = useState(props.price);\n\n//     // isUpdating variable = false\n//     // now isUpdating is true\n//     function handleUpdate(){\n//         let book;\n\n//         if(isUpdating === true) {\n//             book = {\n//                         id: updatedId,\n//                         title: updatedTitle,\n//                         author: updatedAuthor,\n//                         price: updatedPrice\n//                     }\n\n//                     fetch(`http://localhost:8000/books/${props.id}`, {\n//                         method: 'PUT',\n//                         headers: {\n//                             'Content-Type': 'application/json'\n//                         },\n//                         body: JSON.stringify(book)\n//                     })\n//                     .then(()=>{\n//                         let newBooks = [...props.books];\n\n//                     newBooks.map(\n//                         (element, idx)=>{\n//                             if(element.id === book.id) {\n//                                 newBooks.splice(idx, 1, book);\n//                             }\n//                         }\n//                     )\n\n//                     props.setBooks(newBooks);\n//                     setIsUpdating(false);\n//                     })        \n//         }   \n//         else{\n//             setIsUpdating(true);\n//         }\n//     }\n\n//     function handleIdChange(event) {\n//         setUpdatedId(event.target.value);\n//     }\n\n//     function handleTitleChange(event){\n//         setUpdatedTitle(event.target.value);\n//     }\n\n//     function handleAuthorChange(event){\n//         setUpdatedAuthor(event.target.value);\n//     }\n\n//     function handlePriceChange(event){\n//         setUpdatedPrice(event.target.value);\n//     }\n\n//     return(\n//         <div id=\"book-container\">\n\n//             {isUpdating ? \n//                 <input  \n//                     type=\"text\"\n//                     id=\"input-data1\"\n//                     className=\"input-data\"\n//                     placeholder='ID'\n//                     required\n//                     onChange={handleIdChange}\n//                     value={updatedId}\n\n//             />\n//             :\n//                 <span id=\"container-data1\" className='book-data'>{props.id}</span>\n//             }\n\n//             {\n//                 isUpdating?\n//                     <input\n//                         type=\"text\"\n//                         id=\"input-data2\"\n//                         className=\"input-data\"\n//                         placeholder='Title'\n//                         required\n//                         onChange={handleTitleChange}\n//                         value = {updatedTitle}\n\n//                     />\n//                 :\n//                     <span id=\"container-data2\" className='book-data'>{props.title}</span> \n\n//             }\n\n// {\n//                 isUpdating?\n//                     <input\n//                         type=\"text\"\n//                         id=\"input-data3\"\n\n//                         className=\"input-data\"\n//                         placeholder='Author'\n//                         required\n//                         onChange={handleAuthorChange}\n//                         value = {updatedAuthor}\n//                     />\n//                 :\n//                     <span id=\"container-data3\" className='book-data'>{props.author}</span> \n\n//             }\n\n// {\n//                 isUpdating?\n//                     <input\n//                         type=\"text\"\n//                         id=\"input-data4\"\n\n//                         className=\"input-data\"\n//                         placeholder='Price'\n//                         required\n//                         onChange={handlePriceChange}\n//                         value={updatedPrice}\n//                     />\n//                 :\n//                     <span id=\"container-data4\" className='book-data'>{props.price}</span> \n\n//             }\n\n//           <button id=\"remove-btn\" className='btn' onClick={()=>{props.handleRemove(props.id)}}>Remove</button>\n//           <button id=\"update-btn\" className='btn' onClick={handleUpdate} > {isUpdating ? \"Save\" : \"Update\"} </button>\n//         </div>\n//     );\n// }\n// export default Book;","map":{"version":3,"names":[],"sources":["D:/D/EDGE DLOAD/Placement PREP/React/bookpage-class/src/components/Book.jsx"],"sourcesContent":["// import React from 'react';\r\n// import { useState } from 'react';\r\n// import './Book.css';\r\n\r\n// function Book(props){\r\n\r\n//     let[isUpdating, setIsUpdating] = useState(false);\r\n\r\n//     let[updatedId, setUpdatedId] = useState(props.id);\r\n//     let[updatedTitle, setUpdatedTitle] = useState(props.title);\r\n//     let[updatedAuthor, setUpdatedAuthor] = useState(props.author);\r\n//     let[updatedPrice, setUpdatedPrice] = useState(props.price);\r\n\r\n\r\n\r\n//     // isUpdating variable = false\r\n//     // now isUpdating is true\r\n//     function handleUpdate(){\r\n//         let book;\r\n\r\n//         if(isUpdating === true) {\r\n//             book = {\r\n//                         id: updatedId,\r\n//                         title: updatedTitle,\r\n//                         author: updatedAuthor,\r\n//                         price: updatedPrice\r\n//                     }\r\n\r\n//                     fetch(`http://localhost:8000/books/${props.id}`, {\r\n//                         method: 'PUT',\r\n//                         headers: {\r\n//                             'Content-Type': 'application/json'\r\n//                         },\r\n//                         body: JSON.stringify(book)\r\n//                     })\r\n//                     .then(()=>{\r\n//                         let newBooks = [...props.books];\r\n\r\n//                     newBooks.map(\r\n//                         (element, idx)=>{\r\n//                             if(element.id === book.id) {\r\n//                                 newBooks.splice(idx, 1, book);\r\n//                             }\r\n//                         }\r\n//                     )\r\n            \r\n//                     props.setBooks(newBooks);\r\n//                     setIsUpdating(false);\r\n//                     })        \r\n//         }   \r\n//         else{\r\n//             setIsUpdating(true);\r\n//         }\r\n//     }\r\n\r\n//     function handleIdChange(event) {\r\n//         setUpdatedId(event.target.value);\r\n//     }\r\n\r\n//     function handleTitleChange(event){\r\n//         setUpdatedTitle(event.target.value);\r\n//     }\r\n\r\n//     function handleAuthorChange(event){\r\n//         setUpdatedAuthor(event.target.value);\r\n//     }\r\n\r\n\r\n//     function handlePriceChange(event){\r\n//         setUpdatedPrice(event.target.value);\r\n//     }\r\n\r\n//     return(\r\n//         <div id=\"book-container\">\r\n\r\n//             {isUpdating ? \r\n//                 <input  \r\n//                     type=\"text\"\r\n//                     id=\"input-data1\"\r\n//                     className=\"input-data\"\r\n//                     placeholder='ID'\r\n//                     required\r\n//                     onChange={handleIdChange}\r\n//                     value={updatedId}\r\n                    \r\n//             />\r\n//             :\r\n//                 <span id=\"container-data1\" className='book-data'>{props.id}</span>\r\n//             }\r\n\r\n\r\n//             {\r\n//                 isUpdating?\r\n//                     <input\r\n//                         type=\"text\"\r\n//                         id=\"input-data2\"\r\n//                         className=\"input-data\"\r\n//                         placeholder='Title'\r\n//                         required\r\n//                         onChange={handleTitleChange}\r\n//                         value = {updatedTitle}\r\n\r\n//                     />\r\n//                 :\r\n//                     <span id=\"container-data2\" className='book-data'>{props.title}</span> \r\n\r\n//             }\r\n\r\n// {\r\n//                 isUpdating?\r\n//                     <input\r\n//                         type=\"text\"\r\n//                         id=\"input-data3\"\r\n                        \r\n//                         className=\"input-data\"\r\n//                         placeholder='Author'\r\n//                         required\r\n//                         onChange={handleAuthorChange}\r\n//                         value = {updatedAuthor}\r\n//                     />\r\n//                 :\r\n//                     <span id=\"container-data3\" className='book-data'>{props.author}</span> \r\n\r\n//             }\r\n\r\n\r\n// {\r\n//                 isUpdating?\r\n//                     <input\r\n//                         type=\"text\"\r\n//                         id=\"input-data4\"\r\n                        \r\n//                         className=\"input-data\"\r\n//                         placeholder='Price'\r\n//                         required\r\n//                         onChange={handlePriceChange}\r\n//                         value={updatedPrice}\r\n//                     />\r\n//                 :\r\n//                     <span id=\"container-data4\" className='book-data'>{props.price}</span> \r\n\r\n//             }\r\n\r\n//           <button id=\"remove-btn\" className='btn' onClick={()=>{props.handleRemove(props.id)}}>Remove</button>\r\n//           <button id=\"update-btn\" className='btn' onClick={handleUpdate} > {isUpdating ? \"Save\" : \"Update\"} </button>\r\n//         </div>\r\n//     );\r\n// }\r\n// export default Book;\r\n\r\n"],"mappings":"AAAA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAGA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}